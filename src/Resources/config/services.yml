services:
    _defaults:
        public: false
        autowire: true
        autoconfigure: true

    League\Glide\Server:
        factory: ['League\Glide\ServerFactory', 'create']

    MediaMonks\SonataMediaBundle\:
        resource: '../../*'
        exclude: '../../{Entity,Admin}'

    MediaMonks\SonataMediaBundle\Admin\MediaAdmin:
        tags:
            - { name: sonata.admin, manager_type: orm, label: Media, group: 'Media' }
        calls:
            - [ setTemplate, ['outer_list_rows_mosaic', '@@MediaMonksSonataMedia/CRUD/outer_list_rows_mosaic.html.twig']]
            - [ setTemplate, ['edit', '@@MediaMonksSonataMedia/CRUD/edit.html.twig']]

    _instanceof:
        MediaMonks\SonataMediaBundle\Provider\ProviderInterface:
          tags: [sonata_media.provider]

    MediaMonks\SonataMediaBundle\Provider\ProviderPool:
        public: true

    MediaMonks\SonataMediaBundle\Handler\SignatureParameterHandler:
        arguments:
            $key: '%kernel.secret%'

    MediaMonks\SonataMediaBundle\Generator\ImageUrlGenerator:
        public: true
        arguments:
            $defaultRouteName: '%mediamonks.sonata_media.default_route.image%'

    MediaMonks\SonataMediaBundle\Generator\DownloadUrlGenerator:
        public: true
        arguments:
            $defaultRouteName: '%mediamonks.sonata_media.default_route.download%'

    MediaMonks\SonataMediaBundle\Generator\ImageGenerator:
        public: true

    MediaMonks\SonataMediaBundle\Utility\ImageUtility:
        public: true

    MediaMonks\SonataMediaBundle\Utility\DownloadUtility:
        public: true

    MediaMonks\SonataMediaBundle\Controller\HelperController:
        public: true

    MediaMonks\SonataMediaBundle\Controller\CRUDController:
        public: true

    MediaMonks\SonataMediaBundle\Controller\MediaController:
        public: true

    MediaMonks\SonataMediaBundle\EventListener\MenuBuilderListener:
        tags:
            - { name: kernel.event_listener, event: sonata.admin.event.configure.menu.sidebar, method: addMenuItems }

    # interface aliases
    MediaMonks\SonataMediaBundle\Client\HttpClientInterface: '@MediaMonks\SonataMediaBundle\Client\CurlHttpClient'
    MediaMonks\SonataMediaBundle\Handler\ParameterHandlerInterface: '@MediaMonks\SonataMediaBundle\Handler\SignatureParameterHandler'
    MediaMonks\SonataMediaBundle\Generator\FilenameGeneratorInterface: '@MediaMonks\SonataMediaBundle\Generator\DefaultFilenameGenerator'
