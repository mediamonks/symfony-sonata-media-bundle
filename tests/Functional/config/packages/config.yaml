framework:
  test: true
  secret: '%secret%'
  form: ~
  assets:
    base_path: '/'
  translator: ~
  csrf_protection: ~
  default_locale: 'en'
  session:
    storage_id: session.storage.mock_file
  fragments: ~
  http_method_override: true

twig:
  debug: '%kernel.debug%'
  strict_variables: '%kernel.debug%'
  default_path: '%kernel.project_dir%/templates'

doctrine:
  dbal:
    driver: pdo_sqlite
    path: '%kernel.project_dir%/var/db.sqlite'
  orm:
    auto_generate_proxy_classes: '%kernel.debug%'
    naming_strategy: doctrine.orm.naming_strategy.underscore
    auto_mapping: true
    mappings:
      MediaMonks\SonataMediaBundle\Tests\Functional\src:
        is_bundle: false
        type: annotation
        dir: '%kernel.project_dir%/src/Entity'
        prefix: 'MediaMonks\SonataMediaBundle\Tests\Functional\src\Entity'

sonata_admin:
  title: 'MediaMonks'
  security:
    handler: sonata.admin.security.handler.noop

sonata_block:
  default_contexts: [ cms ]
  blocks:
    sonata.admin.block.admin_list:
      contexts: [ admin ]
    sonata.user.block.menu:
    sonata.user.block.account:

oneup_flysystem:
  adapters:
    media_private:
      local:
        location: '%kernel.project_dir%/var/media/'
    media_public:
      local:
        location: '%kernel.project_dir%/public/media/'
  filesystems:
    media_private:
      adapter: media_private
    media_public:
      adapter: media_public

mediamonks_sonata_media:
  filesystem_private: 'oneup_flysystem.media_private_filesystem'
  filesystem_public: 'oneup_flysystem.media_public_filesystem'
  redirect_url: '/media/'
  model_class: 'MediaMonks\SonataMediaBundle\Tests\Functional\src\Entity\Media'

monolog:
  handlers:
    main:
      type: fingers_crossed
      action_level: error
      handler: nested
      excluded_http_codes: [ 404, 405 ]
      channels: [ "!event" ]
    nested:
      type: stream
      path: "%kernel.logs_dir%/%kernel.environment%.log"
      level: debug